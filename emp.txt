Certainly! Here are the SQL queries for the tasks you've mentioned:

1. **Create a table EMPLOYEE:**
   ```sql
   CREATE TABLE EMPLOYEE (
       Emp_no INT AUTO_INCREMENT PRIMARY KEY,
       E_name VARCHAR(255),
       Gender VARCHAR(10),
       Date_of_birth DATE,
       Dept_name VARCHAR(255),
       Job_id VARCHAR(50),
       Salary DECIMAL(10,2)
   );
   ```

2. **Insert 10 records:**
   ```sql
   INSERT INTO EMPLOYEE (E_name, Gender, Date_of_birth, Dept_name, Job_id, Salary)
   VALUES
       ('John', 'Male', '1990-01-01', 'HR', 'HR1', 50000),
       ('Jane', 'Female', '1992-05-15', 'IT', 'IT1', 60000),
       -- Add more records as needed
       ;
   ```

3. **Update the First name ROHIT instead of RIYA for Emp no 100:**
   ```sql
   UPDATE EMPLOYEE SET E_name = 'ROHIT' WHERE Emp_no = 100;
   ```

4. **Add a new column HIREDATE:**
   ```sql
   ALTER TABLE EMPLOYEE ADD COLUMN HIREDATE DATE;
   ```

5. **Display details of Employees in MECHANICAL department:**
   ```sql
   SELECT * FROM EMPLOYEE WHERE Dept_name = 'MECHANICAL';
   ```

6. **Delete the email_id of employee J/mes:**
   ```sql
   UPDATE EMPLOYEE SET email = NULL WHERE E_name = 'J/mes';
   ```

7. **Display complete record of employees in SALES Department:**
   ```sql
   SELECT * FROM EMPLOYEE WHERE Dept_name = 'SALES';
   ```

8. **Query to find names of employees whose first names start with "S":**
   ```sql
   SELECT * FROM EMPLOYEE WHERE E_name LIKE 'S%';
   ```

9. **Delete the record of an employee with Emp_no 106:**
   ```sql
   DELETE FROM EMPLOYEE WHERE Emp_no = 106;
   ```

10. **Joins in MySQL:**
    - INNER JOIN:
      ```sql
      SELECT EMPLOYEE.Emp_no, EMPLOYEE.E_name, DEPARTMENT.Dept_name
      FROM EMPLOYEE
      INNER JOIN DEPARTMENT ON EMPLOYEE.Dept_id = DEPARTMENT.Dept_id;
      ```
    - LEFT JOIN:
      ```sql
      SELECT EMPLOYEE.Emp_no, EMPLOYEE.E_name, DEPARTMENT.Dept_name
      FROM EMPLOYEE
      LEFT JOIN DEPARTMENT ON EMPLOYEE.Dept_id = DEPARTMENT.Dept_id;
      ```

11. **Query to display names of employees whose name contains "A" as the last alphabet:**
    ```sql
    SELECT * FROM EMPLOYEE WHERE E_name LIKE '%A';
    ```

12. **Query to display names and department IDs in ascending and descending order:**
    ```sql
    -- Ascending order
    SELECT E_name, Dept_id FROM EMPLOYEE ORDER BY E_name ASC;

    -- Descending order
    SELECT E_name, Dept_id FROM EMPLOYEE ORDER BY E_name DESC;
    ```

13. **Query to uppercase the name and lowercase the gender:**
    ```sql
    UPDATE EMPLOYEE SET E_name = UPPER(E_name), Gender = LOWER(Gender);
    ```

14. **Foreign key and adding foreign key to a table:**
    A foreign key is a field in a table that is a primary key in another table. To add a foreign key:
    ```sql
    ALTER TABLE EMPLOYEE
    ADD CONSTRAINT fk_Department
    FOREIGN KEY (Dept_id) REFERENCES DEPARTMENT(Dept_id);
    ```

15. **Query to display details with "NOT GIVEN" if department id is null:**
    ```sql
    SELECT Emp_no, E_name, COALESCE(Dept_name, 'NOT GIVEN') AS Dept_name
    FROM EMPLOYEE;
    ```

Please adjust the column names and data types according to your actual schema.
